#!/bin/bash

#version="$Id: $"

# ___ Help _____________________________________________________________________

if [ $# -ne 5 ] || ! ([ "xforward" == "x$1" ]) # || [ "xnew" != "x$1" ])
then
    This=`echo $0 | sed "s/^.*\///g"`
cat<<__END_OF_HELP__
Usage: $This <RelationMode> <ExtCellsMapPath1> <ExtCellsMapPath2>
        "<BSCRels> [<BSCRels> ...]" "<BSCRels> [<BSCRels> ...]"

where
 RelationMode
    There are two mode to connect the two side to each other with external GSM
    relations.
     - 'forward': Modify the existing external GSM relations to forward those
        to the other side. The number of external GSM relations will not
        change.
     - 'new': Leave the original relations unchanged and add new external GSM
        relations to the other side based on the original realtions. The number
        of external GSM relations will be doubled.
        NOTE: This option is not supported yet.
 ExtCellsMapPath1
    The map of external GSM cells on side 1 from original cell names and CGI
    values to the new cell names and CGI values.
    This file must be generated by the gen_gsm_map.sh script.
 ExtCellsMapPath2
    The map of external GSM cells on side 2 from original cell names and CGI
    values to the new cell names and CGI values.
    This file must be generated by the gen_gsm_map.sh script.
 BSCRels
    The list of internal GSM, external GSM and external UTRAN relations defined
    in a BSC node.
    This file must be generated by a list_BSC_rels.sh script.

Example:
 $This forward cells.EXT.side1.map.csv cells.EXT.side2.map.csv
    "Side1Sim1/BSC11.BSCRels Side1Sim2/BSC12.BSCRels"
    "Side2Sim1/BSC21.BSCRels Side2Sim2/BSC22.BSCRels"

DESCRIPTION:
 Update the external GSM relations based on the realtion mode using the maps.

 The result is some MML script next to the BSCRels files that can apply the
 changes in the BSC nodes.

__END_OF_HELP__
exit 1
fi


# ___ Parameters _______________________________________________________________

# Parameters
RelationMode=$1
ExtCellsMapPath1=$2
ExtCellsMapPath2=$3
Side1RelsPathes=$4
Side2RelsPathes=$5


# ___ Main activity ____________________________________________________________

# Create again the deleted external GSM relations from side 1 now toward cells
# on side 2
for RelsPath in $Side1RelsPathes
do
    MMLPath=`echo $RelsPath | sed "s/\.BSCRels$/\.rels.EXT.update.mml/g"`
    # Update external GSM relations in BSC
    echo "" > $MMLPath
    if [ "xforward" == "x$RelationMode" ]
    then
        egrep -v "^[ ]*(#.*)?$" $RelsPath | grep ",cellrtype=EXT," | cut -d , -f 4,6 |
            tr "=" "," | cut -d , -f 2,4 |
            awk -F , -v ExtCellsMapPath=$ExtCellsMapPath1 \
                'BEGIN{
                    newName["-"] = "-"
                    while((getline < ExtCellsMapPath) > 0) {
                        newName[$1] = $3
                    }
                }
                {
                    IntName    = $1
                    OldExtName = $2
                    NewExtName = newName[OldExtName]
                    printf "RLNRI:CELL=%s,CELLR=%s,SINGLE;\n",IntName,NewExtName
                }' >> $MMLPath
    fi
    echo "" >> $MMLPath
done

# Create again the deleted external GSM relations from side 2 now toward cells
# on side 1
for RelsPath in $Side2RelsPathes
do
    MMLPath=`echo $RelsPath | sed "s/\.BSCRels$/\.rels.EXT.update.mml/g"`
    # Update external GSM relations in BSC
    echo "" > $MMLPath
    if [ "xforward" == "x$RelationMode" ]
    then
        egrep -v "^[ ]*(#.*)?$" $RelsPath | grep ",cellrtype=EXT," | cut -d , -f 4,6 |
            tr "=" "," | cut -d , -f 2,4 |
            awk -F , -v ExtCellsMapPath=$ExtCellsMapPath2 \
                'BEGIN{
                    newName["-"] = "-"
                    while((getline < ExtCellsMapPath) > 0) {
                        newName[$1] = $3
                    }
                }
                {
                    IntName    = $1
                    OldExtName = $2
                    NewExtName = newName[OldExtName]
                    printf "RLNRI:CELL=%s,CELLR=%s,SINGLE;\n",IntName,NewExtName
                }' >> $MMLPath
    fi
    echo "" >> $MMLPath
done


# ___ Postprocessing ___________________________________________________________

